2022-07-24 19:59:06 [32minfo[39m: created database 'developmentdb'
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"SELECT schema_name FROM information_schema.schemata WHERE schema_name = 'amp'","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"CREATE SCHEMA amp AUTHORIZATION postgres","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"ALTER DATABASE developmentdb SET search_path TO amp","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: created schema 'amp' and set search_path
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"SELECT table_name as name FROM information_schema.tables WHERE table_schema = 'amp'","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"-- spine.users definitionCREATE TABLE spine.users ( "id" serial4 NOT NULL, "username" varchar(50) NOT NULL, "email" varchar(100) NOT NULL, "password" varchar(100) NOT NULL, CONSTRAINT "users_pk" PRIMARY KEY ("id"), CONSTRAINT "users_un" UNIQUE ("username", "email"));-- spine.roles definitionCREATE TABLE spine.roles ( "id" int4 NOT NULL, "name" varchar(20) NOT NULL, CONSTRAINT "roles_pk" PRIMARY KEY ("id"), CONSTRAINT "roles_un" UNIQUE ("name"));-- spine.user_roles definitionCREATE TABLE spine.user_roles ( "id" serial4 NOT NULL, "user_id" int4 NOT NULL, "role_id" int4 NOT NULL, CONSTRAINT "user_roles_pk" PRIMARY KEY ("id"));-- spine.user_roles foreign keysALTER TABLE spine.user_rolesADD CONSTRAINT "user_roles_fk_1" FOREIGN KEY ("role_id") REFERENCES spine.roles("id");-- insert initial rolesINSERT INTO spine.roles ("id", "name")VALUES (1, 'user') ON CONFLICT ("id") DO NOTHING;INSERT INTO spine.roles ("id", "name")VALUES (2, 'admin') ON CONFLICT ("id") DO NOTHING;INSERT INTO spine.roles ("id", "name")VALUES (3, 'moderator') ON CONFLICT ("id") DO NOTHING;-- spine.profile_pictures definitionCREATE TABLE spine.profile_pictures ( "id" serial4 NOT NULL, "user_id" int4 NOT NULL, "active" bool NOT NULL, "filename" varchar(60) NOT NULL, "extension" varchar(5) NOT NULL, "file_location" varchar(200) NOT NULL, "created" timestamp NOT NULL, "modified" timestamp NOT NULL, CONSTRAINT "profile_pictures_pk" PRIMARY KEY ("id"), CONSTRAINT "profile_pictures_un" UNIQUE ("filename"), CONSTRAINT "profile_pictures_un1" UNIQUE ("file_location"));-- spine.profile_pictures foreign keysALTER TABLE spine.profile_picturesADD CONSTRAINT "profile_pictures_fk" FOREIGN KEY ("user_id") REFERENCES spine.users("id");","parameters":[]}}
2022-07-24 19:59:06 [31merror[39m: executing query from file failed: schema "spine" does not exist
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"SELECT table_name as name FROM information_schema.tables WHERE table_schema = 'amp'","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: tables '' successfully created
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"SELECT table_name FROM information_schema.tables WHERE table_schema = 'amp' AND table_name = 'migrations'","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"CREATE TABLE migrations ( "id" int8 NOT NULL, "name" varchar(100) NOT NULL, "succeeded" bool NOT NULL, "created" timestamp NOT NULL, "executed" timestamp NOT NULL, CONSTRAINT migrations_pk PRIMARY KEY ("id") )","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: successfully created migrations table
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"SELECT id FROM migrations","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: executing query: {"sql":"SELECT id FROM migrations WHERE succeeded = FALSE","parameters":[]}}
2022-07-24 19:59:06 [32minfo[39m: no migrations to run
2022-07-24 19:59:06 [36mdebug[39m: environment variables: {"app":{"port":3000,"environment":"development"},"cors":{"origin":"http://localhost:3000"},"db":{"pgHost":"127.0.0.1","pgPort":5433,"pgDb":"developmentdb","pgUser":"postgres","pgPw":"admin","pgSchema":"amp"},"auth":{"jwtAuthkey":"somekey"},"static":{"images":{"paths":{"profilePictures":"tmp/images"}}}}
2022-07-24 19:59:06 [36mdebug[39m: listening on 3000
2022-07-24 19:59:58 [32minfo[39m: created database 'developmentdb'
2022-07-24 19:59:58 [32minfo[39m: executing query: {"sql":"SELECT schema_name FROM information_schema.schemata WHERE schema_name = 'spine'","parameters":[]}}
2022-07-24 19:59:58 [32minfo[39m: executing query: {"sql":"CREATE SCHEMA spine AUTHORIZATION postgres","parameters":[]}}
2022-07-24 19:59:58 [32minfo[39m: executing query: {"sql":"ALTER DATABASE developmentdb SET search_path TO spine","parameters":[]}}
2022-07-24 19:59:58 [32minfo[39m: created schema 'spine' and set search_path
2022-07-24 19:59:58 [32minfo[39m: executing query: {"sql":"SELECT table_name as name FROM information_schema.tables WHERE table_schema = 'spine'","parameters":[]}}
2022-07-24 19:59:58 [32minfo[39m: executing query: {"sql":"-- spine.users definitionCREATE TABLE spine.users ( "id" serial4 NOT NULL, "username" varchar(50) NOT NULL, "email" varchar(100) NOT NULL, "password" varchar(100) NOT NULL, CONSTRAINT "users_pk" PRIMARY KEY ("id"), CONSTRAINT "users_un" UNIQUE ("username", "email"));-- spine.roles definitionCREATE TABLE spine.roles ( "id" int4 NOT NULL, "name" varchar(20) NOT NULL, CONSTRAINT "roles_pk" PRIMARY KEY ("id"), CONSTRAINT "roles_un" UNIQUE ("name"));-- spine.user_roles definitionCREATE TABLE spine.user_roles ( "id" serial4 NOT NULL, "user_id" int4 NOT NULL, "role_id" int4 NOT NULL, CONSTRAINT "user_roles_pk" PRIMARY KEY ("id"));-- spine.user_roles foreign keysALTER TABLE spine.user_rolesADD CONSTRAINT "user_roles_fk_1" FOREIGN KEY ("role_id") REFERENCES spine.roles("id");-- insert initial rolesINSERT INTO spine.roles ("id", "name")VALUES (1, 'user') ON CONFLICT ("id") DO NOTHING;INSERT INTO spine.roles ("id", "name")VALUES (2, 'admin') ON CONFLICT ("id") DO NOTHING;INSERT INTO spine.roles ("id", "name")VALUES (3, 'moderator') ON CONFLICT ("id") DO NOTHING;-- spine.profile_pictures definitionCREATE TABLE spine.profile_pictures ( "id" serial4 NOT NULL, "user_id" int4 NOT NULL, "active" bool NOT NULL, "filename" varchar(60) NOT NULL, "extension" varchar(5) NOT NULL, "file_location" varchar(200) NOT NULL, "created" timestamp NOT NULL, "modified" timestamp NOT NULL, CONSTRAINT "profile_pictures_pk" PRIMARY KEY ("id"), CONSTRAINT "profile_pictures_un" UNIQUE ("filename"), CONSTRAINT "profile_pictures_un1" UNIQUE ("file_location"));-- spine.profile_pictures foreign keysALTER TABLE spine.profile_picturesADD CONSTRAINT "profile_pictures_fk" FOREIGN KEY ("user_id") REFERENCES spine.users("id");","parameters":[]}}
2022-07-24 19:59:59 [32minfo[39m: executing query: {"sql":"SELECT table_name as name FROM information_schema.tables WHERE table_schema = 'spine'","parameters":[]}}
2022-07-24 19:59:59 [32minfo[39m: tables 'roles, user_roles, users, profile_pictures' successfully created
2022-07-24 19:59:59 [32minfo[39m: executing query: {"sql":"SELECT table_name FROM information_schema.tables WHERE table_schema = 'spine' AND table_name = 'migrations'","parameters":[]}}
2022-07-24 19:59:59 [32minfo[39m: executing query: {"sql":"CREATE TABLE migrations ( "id" int8 NOT NULL, "name" varchar(100) NOT NULL, "succeeded" bool NOT NULL, "created" timestamp NOT NULL, "executed" timestamp NOT NULL, CONSTRAINT migrations_pk PRIMARY KEY ("id") )","parameters":[]}}
2022-07-24 19:59:59 [32minfo[39m: successfully created migrations table
2022-07-24 19:59:59 [32minfo[39m: executing query: {"sql":"SELECT id FROM migrations","parameters":[]}}
2022-07-24 19:59:59 [32minfo[39m: executing query: {"sql":"SELECT id FROM migrations WHERE succeeded = FALSE","parameters":[]}}
2022-07-24 19:59:59 [32minfo[39m: no migrations to run
2022-07-24 19:59:59 [36mdebug[39m: environment variables: {"app":{"port":3000,"environment":"development"},"cors":{"origin":"http://localhost:3000"},"db":{"pgHost":"127.0.0.1","pgPort":5433,"pgDb":"developmentdb","pgUser":"postgres","pgPw":"admin","pgSchema":"spine"},"auth":{"jwtAuthkey":"somekey"},"static":{"images":{"paths":{"profilePictures":"tmp/images"}}}}
2022-07-24 19:59:59 [36mdebug[39m: listening on 3000
