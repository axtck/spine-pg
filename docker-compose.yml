version: "3.9"

services:
  # --- DATABASE
  mysql-main:
    image: mysql:8
    container_name: "mysql-main"
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      # checks if database is ready
      test: mysqladmin ping -h 127.0.0.1 -u ${MYSQL_USER} --password=${MYSQL_PASSWORD}
      timeout: 20s
      retries: 5
    ports:
      - ${COMPOSE_MYSQL_PORT}:3306
    volumes:
      - ./docker/volumes/mysql-main:/var/lib/mysql

  # --- SERVER
  server-main:
    container_name: "server-main"
    depends_on:
      mysql-main:
        condition: service_healthy # only start server when database is ready
    build:
      args:
        - PORT=${COMPOSE_SERVER_PORT} # port to expose
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env # use env file for environment variables
    environment:
      # overwrite container specific environment variables separately
      - HOST_SERVER_PORT=${COMPOSE_SERVER_PORT} # docker is host inside docker env 
      - MYSQL_HOST=mysql-main # mysql-main (db) container is mysql host inside docker env 
      - MYSQL_PORT=3306 # port is 3306 inside docker env 
    ports:
      - ${HOST_SERVER_PORT}:${COMPOSE_SERVER_PORT} # map to outside container
    stdin_open: true
    tty: true
