version: "3.9"

services:
  # --- DATABASE
  pg-main:
    image: postgres:14-alpine
    container_name: "pg-main"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      # checks if database is ready
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER}" ]
      timeout: 20s
      retries: 5
    ports:
      - ${COMPOSE_PG_PORT}:5432
    volumes:
      - ./docker/volumes/pg-main:/var/lib/postgresql/data

  # --- SERVER
  server-main:
    container_name: "server-main"
    depends_on:
      pg-main:
        condition: service_healthy # only start server when database is ready
    build:
      args:
        - PORT=${COMPOSE_SERVER_PORT} # port to expose
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env # use env file for environment variables
    environment:
      # overwrite container specific environment variables separately
      - HOST_SERVER_PORT=${COMPOSE_SERVER_PORT} # docker is host inside docker env 
      - PG_HOST=pg-main # pg-main (db) container is pg host inside docker env 
      - PG_PORT=5432 # port is 5432 inside docker env 
    ports:
      - ${HOST_SERVER_PORT}:${COMPOSE_SERVER_PORT} # map to outside container
    stdin_open: true
    tty: true
